// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _4___E_CODING_DAL;

namespace _4___E_CODING_DAL.Migrations
{
    [DbContext(typeof(TemplateProjectDbContext))]
    [Migration("20210729104106_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_4___E_CODING_DAL.ProjectResult", b =>
                {
                    b.Property<int>("TemplateProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateResultId")
                        .HasColumnType("int");

                    b.HasKey("TemplateProjectId", "TemplateResultId");

                    b.HasIndex("TemplateResultId");

                    b.ToTable("ProjectResult");

                    b.HasData(
                        new
                        {
                            TemplateProjectId = 1,
                            TemplateResultId = 1
                        },
                        new
                        {
                            TemplateProjectId = 1,
                            TemplateResultId = 2
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.ProjectTechnique", b =>
                {
                    b.Property<int>("TemplateProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateTechniqueId")
                        .HasColumnType("int");

                    b.HasKey("TemplateProjectId", "TemplateTechniqueId");

                    b.HasIndex("TemplateTechniqueId");

                    b.ToTable("ProjectTechnique");

                    b.HasData(
                        new
                        {
                            TemplateProjectId = 1,
                            TemplateTechniqueId = 1
                        },
                        new
                        {
                            TemplateProjectId = 1,
                            TemplateTechniqueId = 2
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnel", b =>
                {
                    b.Property<int>("TemplateFonctionnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemplateFonctionnelContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEFVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateProjectId")
                        .HasColumnType("int");

                    b.HasKey("TemplateFonctionnelId");

                    b.HasIndex("TemplateProjectId")
                        .IsUnique();

                    b.ToTable("TemplateFonctionnel");

                    b.HasData(
                        new
                        {
                            TemplateFonctionnelId = 1,
                            TemplateFonctionnelContent = "TemplateFonctionnelContent",
                            TemplateFonctionnelDescription = "TemplateFonctionnelDescription",
                            TemplateFonctionnelEFVersion = "TemplateFonctionnelEFVersion",
                            TemplateFonctionnelName = "TemplateFonctionnelName",
                            TemplateFonctionnelTitle = "TemplateFonctionnelTitle",
                            TemplateProjectId = 1
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnelEntity", b =>
                {
                    b.Property<int>("TemplateFonctionnelEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemplateFonctionnelEntityContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityTypeNet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityTypeSQL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityVersionEF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelEntityVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateFonctionnelId")
                        .HasColumnType("int");

                    b.HasKey("TemplateFonctionnelEntityId");

                    b.HasIndex("TemplateFonctionnelId");

                    b.ToTable("TemplateFonctionnelEntity");

                    b.HasData(
                        new
                        {
                            TemplateFonctionnelEntityId = 1,
                            TemplateFonctionnelEntityContent = "TemplateFonctionnelEntityContent",
                            TemplateFonctionnelEntityDescription = "TemplateFonctionnelEntityDescription",
                            TemplateFonctionnelEntityName = "TemplateFonctionnelEntityName",
                            TemplateFonctionnelEntityTitle = "TemplateFonctionnelEntityTitle",
                            TemplateFonctionnelEntityTypeNet = "TemplateFonctionnelEntityTypeNet",
                            TemplateFonctionnelEntityTypeSQL = "TemplateFonctionnelEntityTypeSQL",
                            TemplateFonctionnelEntityVersionEF = "TemplateFonctionnelEntityVersionEF",
                            TemplateFonctionnelEntityVersionNET = "TemplateFonctionnelEntityVersionNET",
                            TemplateFonctionnelId = 1
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnelProperty", b =>
                {
                    b.Property<int>("TemplateFonctionnelPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TemplateFonctionnelEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateFonctionnelId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateFonctionnelPropertyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelPropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelPropertyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelPropertyVersionEF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateFonctionnelPropertyVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateFonctionnelPropertyId");

                    b.HasIndex("TemplateFonctionnelEntityId");

                    b.ToTable("TemplateFonctionnelProperty");

                    b.HasData(
                        new
                        {
                            TemplateFonctionnelPropertyId = 1,
                            TemplateFonctionnelEntityId = 1,
                            TemplateFonctionnelId = 1,
                            TemplateFonctionnelPropertyDescription = "TemplateFonctionnelPropertyDescription",
                            TemplateFonctionnelPropertyName = "TemplateFonctionnelPropertyName",
                            TemplateFonctionnelPropertyTitle = "TemplateFonctionnelPropertyTitle",
                            TemplateFonctionnelPropertyVersionEF = "TemplateFonctionnelPropertyVersionEF",
                            TemplateFonctionnelPropertyVersionNET = "TemplateFonctionnelPropertyVersionNET"
                        },
                        new
                        {
                            TemplateFonctionnelPropertyId = 2,
                            TemplateFonctionnelEntityId = 1,
                            TemplateFonctionnelId = 1,
                            TemplateFonctionnelPropertyDescription = "TemplateFonctionnelPropertyDescription",
                            TemplateFonctionnelPropertyName = "TemplateFonctionnelPropertyName",
                            TemplateFonctionnelPropertyTitle = "TemplateFonctionnelPropertyTitle",
                            TemplateFonctionnelPropertyVersionEF = "TemplateFonctionnelPropertyVersionEF",
                            TemplateFonctionnelPropertyVersionNET = "TemplateFonctionnelPropertyVersionNET"
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateParameter", b =>
                {
                    b.Property<int>("TemplateParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateTechniqueItemId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateParameterId");

                    b.HasIndex("TemplateTechniqueItemId");

                    b.ToTable("TemplateParameter");
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateProject", b =>
                {
                    b.Property<int>("TemplateProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemplateProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateProjectVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateProjectVersionNet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateProjectId");

                    b.ToTable("TemplateProject");

                    b.HasData(
                        new
                        {
                            TemplateProjectId = 1,
                            TemplateProjectDescription = "TemplateProjectDescription1",
                            TemplateProjectName = "TemplateProjectName1",
                            TemplateProjectTitle = "TemplateProjectTitle1",
                            TemplateProjectVersion = "TemplateProjectVersion1",
                            TemplateProjectVersionNet = "TemplateProjectVersionNet1"
                        },
                        new
                        {
                            TemplateProjectId = 2,
                            TemplateProjectDescription = "TemplateProjectDescription2",
                            TemplateProjectName = "TemplateProjectName2",
                            TemplateProjectTitle = "TemplateProjectTitle2",
                            TemplateProjectVersion = "TemplateProjectVersion2",
                            TemplateProjectVersionNet = "TemplateProjectVersionNet2"
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateResult", b =>
                {
                    b.Property<int>("TemplateResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TemplateProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateResultDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateResultId");

                    b.ToTable("TemplateResult");

                    b.HasData(
                        new
                        {
                            TemplateResultId = 1,
                            TemplateProjectId = 1,
                            TemplateResultDescription = "TemplateResultDescription",
                            TemplateResultName = "TemplateResultName",
                            TemplateResultTitle = "TemplateResultTitle",
                            TemplateResultVersion = "TemplateResultVersion",
                            TemplateResultVersionNET = "TemplateResultVersionNET"
                        },
                        new
                        {
                            TemplateResultId = 2,
                            TemplateProjectId = 1,
                            TemplateResultDescription = "TemplateResultDescription",
                            TemplateResultName = "TemplateResultName",
                            TemplateResultTitle = "TemplateResultTitle",
                            TemplateResultVersion = "TemplateResultVersion",
                            TemplateResultVersionNET = "TemplateResultVersionNET"
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateResultItem", b =>
                {
                    b.Property<int>("TemplateResultItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TemplateFonctionnelId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateResultFinalContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateResultId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateResultInitialContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultItemTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultItemVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateResultItemVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateTechniqueId")
                        .HasColumnType("int");

                    b.HasKey("TemplateResultItemId");

                    b.HasIndex("TemplateResultId");

                    b.ToTable("TemplateResultItem");

                    b.HasData(
                        new
                        {
                            TemplateResultItemId = 1,
                            TemplateFonctionnelId = 1,
                            TemplateResultFinalContent = "TemplateResultFinalContent",
                            TemplateResultId = 1,
                            TemplateResultInitialContent = "TemplateResultInitialContent",
                            TemplateResultItemDescription = "TemplateResultItemDescription",
                            TemplateResultItemName = "TemplateResultItemName",
                            TemplateResultItemTitle = "TemplateResultItemTitle",
                            TemplateResultItemVersion = "TemplateResultItemVersion",
                            TemplateResultItemVersionNET = "TemplateResultItemVersionNET",
                            TemplateTechniqueId = 1
                        },
                        new
                        {
                            TemplateResultItemId = 2,
                            TemplateFonctionnelId = 1,
                            TemplateResultFinalContent = "TemplateResultFinalContent",
                            TemplateResultId = 2,
                            TemplateResultInitialContent = "TemplateResultInitialContent",
                            TemplateResultItemDescription = "TemplateResultItemDescription",
                            TemplateResultItemName = "TemplateResultItemName",
                            TemplateResultItemTitle = "TemplateResultItemTitle",
                            TemplateResultItemVersion = "TemplateResultItemVersion",
                            TemplateResultItemVersionNET = "TemplateResultItemVersionNET",
                            TemplateTechniqueId = 1
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateTechnique", b =>
                {
                    b.Property<int>("TemplateTechniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TemplateProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateTechniqueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateTechniqueId");

                    b.ToTable("TemplateTechnique");

                    b.HasData(
                        new
                        {
                            TemplateTechniqueId = 1,
                            TemplateProjectId = 1,
                            TemplateTechniqueDescription = "TemplateTechniqueDescription1",
                            TemplateTechniqueName = "TemplateTechniqueName1",
                            TemplateTechniqueTitle = "TemplateTechniqueTitle1",
                            TemplateTechniqueVersion = "TemplateTechniqueVersion1",
                            TemplateTechniqueVersionNET = "TemplateTechniqueVersionNET1"
                        },
                        new
                        {
                            TemplateTechniqueId = 2,
                            TemplateProjectId = 1,
                            TemplateTechniqueDescription = "TemplateTechniqueDescription2",
                            TemplateTechniqueName = "TemplateTechniqueName2",
                            TemplateTechniqueTitle = "TemplateTechniqueTitle2",
                            TemplateTechniqueVersion = "TemplateTechniqueVersion2",
                            TemplateTechniqueVersionNET = "TemplateTechniqueVersionNET2"
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateTechniqueItem", b =>
                {
                    b.Property<int>("TemplateTechniqueItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemplateTechniqueFinalContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateTechniqueId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateTechniqueInitialFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueItemTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueItemVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateTechniqueItemVersionNET")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateTechniqueItemId");

                    b.HasIndex("TemplateTechniqueId");

                    b.ToTable("TemplateTechniqueItem");

                    b.HasData(
                        new
                        {
                            TemplateTechniqueItemId = 1,
                            TemplateTechniqueId = 1,
                            TemplateTechniqueItemDescription = "TemplateTechniqueItemDescription1",
                            TemplateTechniqueItemName = "TemplateTechniqueItemName1",
                            TemplateTechniqueItemTitle = "TemplateTechniqueItemTitle1",
                            TemplateTechniqueItemVersion = "TemplateTechniqueItemVersion1",
                            TemplateTechniqueItemVersionNET = "TemplateTechniqueItemVersionNET1"
                        });
                });

            modelBuilder.Entity("_4___E_CODING_DAL.ProjectResult", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateProject", "TemplateProject")
                        .WithMany("ProjectResult")
                        .HasForeignKey("TemplateProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_4___E_CODING_DAL.TemplateResult", "TemplateResult")
                        .WithMany("ProjectResult")
                        .HasForeignKey("TemplateResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.ProjectTechnique", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateProject", "TemplateProject")
                        .WithMany("ProjectTechnique")
                        .HasForeignKey("TemplateProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_4___E_CODING_DAL.TemplateTechnique", "TemplateTechnique")
                        .WithMany("ProjectTechnique")
                        .HasForeignKey("TemplateTechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnel", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateProject", "TemplateProject")
                        .WithOne("TemplateFonctionnel")
                        .HasForeignKey("_4___E_CODING_DAL.TemplateFonctionnel", "TemplateProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnelEntity", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateFonctionnel", "TemplateFonctionnel")
                        .WithMany("TemplateFonctionnelEntity")
                        .HasForeignKey("TemplateFonctionnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateFonctionnelProperty", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateFonctionnelEntity", "TemplateFonctionnelEntity")
                        .WithMany("TemplateFonctionnelProperty")
                        .HasForeignKey("TemplateFonctionnelEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateParameter", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateTechniqueItem", "TemplateTechniqueItem")
                        .WithMany("TemplateParameter")
                        .HasForeignKey("TemplateTechniqueItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateResultItem", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateResult", "TemplateResult")
                        .WithMany("TemplateResultItem")
                        .HasForeignKey("TemplateResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4___E_CODING_DAL.TemplateTechniqueItem", b =>
                {
                    b.HasOne("_4___E_CODING_DAL.TemplateTechnique", "TemplateTechnique")
                        .WithMany("TemplateTechniqueItem")
                        .HasForeignKey("TemplateTechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
